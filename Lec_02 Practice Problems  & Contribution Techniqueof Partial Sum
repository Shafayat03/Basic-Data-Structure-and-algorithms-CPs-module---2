/// Practice Problems of Partial Sum__ Lec_02
 Discussed topics: 
1. Practice Problems of Partial Sum
2. Contribution Technique
3. XOR Sum Query

Discussed Problems :
Task-01 : https://leetcode.com/problems/running-sum-of-1d-array/description/
Task-02 : https://leetcode.com/problems/sum-of-all-odd-length-subarrays/description/
Task-03 : https://cses.fi/problemset/task/1650/


Solve Task 01 : 

 class Solution {
public:
    vector<int> runningSum(vector<int>& nums) {
        for ( int i = 1; i < nums.size(); i++ ) {
            nums[i] += nums[i-1];
        }

        return nums;
    }
};



Sovle Task -02 : 

class Solution {
public:
    int sumOddLengthSubarrays(vector<int>& arr) {
        int n = arr.size();
        vector<int> sum(n+1);

        for ( int i = 1; i <= n; i++ ) {
            sum[i] = sum[i-1] + arr[i-1];
        }

        int ans = 0;
        for ( int i = 1; i <= n; i++ ) {
            for ( int j = i; j <= n; j++ ) {
                int len = j - i + 1;

                if ( len % 2 ) {
                    ans += ( sum[j] - sum[i-1] );
                }
            }
        }

        return ans;
    }
};


Solve Task -03 : 

///   ***   ---   ||         In the name of ALLAH        |||   ---   ***   ///
 
#include<bits/stdc++.h>
using namespace std;
 
typedef long long ll;
 
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'
 
const int mx = 2e5+123;
int a[mx];
int sum[mx];
 
 
int main()
{
    optimize();
 
    int n, q;
    cin >> n >> q;
 
    for ( int i = 1; i <= n; i++ ) cin >> a[i];
 
    for ( int i = 1; i <= n; i++ ) sum[i] = sum[i-1] ^ a[i];
 
    while ( q-- ) {
        int l, r;
        cin  >> l >> r;
 
        cout << ( sum[r] ^ sum[l-1] ) << endl;
    }
 
    return 0;
}
